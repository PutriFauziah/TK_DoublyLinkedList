#include <stdio.h>
#include <string.h>
#include <stdlib.h>

struct data{
	char name[30];
	int qty;
	int price;
	struct data *next, *prev;
	
}*head, *tail, *current;

typedef struct data *node;

void pushHead(char name[], int qty, int price){
	current = (struct data *)malloc(sizeof(struct data));
	strcpy(current->name, name);
	current->qty=qty;
	current->price=price;
	current->next = current->prev=NULL;

	if(head==NULL){
		head=tail=current;
	}else{
		head->prev=current;
		current->next=head;
		head=current;
	}
}

void pushTail(char name[], int qty, int price){
	current = (struct data *)malloc(sizeof(struct data));
	strcpy(current->name, name);
	current->qty = qty;
	current->price = price;
	current->prev = current->next = NULL;

	if(head==NULL){
		head=tail=current;
	}else{
		current->prev = tail;
		tail->next = current;
		tail = current;
	}
}

void insert(char name[], int qty, int price){
	if(head==NULL){
		pushHead(name, qty, price);
	}else if(qty < head->qty){
		pushHead(name, qty, price);
	}else if(qty > tail->qty){
		pushTail(name, qty, price);
	}else{
		current = (struct data *)malloc(sizeof(struct data));
		strcpy(current->name, name);
		current->qty = qty;
		current->price = price;
		current->next = current->prev = NULL;

		node temp=head;
		while(temp!=NULL && temp->qty < current->qty){
			temp=temp->next;
		}
		current->prev=temp->prev;
		current->next=temp;

		temp->prev->next=current;
		temp->prev=current;
	}
}

int count(node head) {
	int count = 0;
	while(head) {
		count++;
		head = head->next;
	}
	return count;
}

node getIndex(int index, node head) {
	int counter = count(head);
	int i = 0;
	if (index < 0 || index > counter) {
		return NULL;
	}
	for (i = 0; i <= index; i++) {
		if (i == index) {
			return head;
		}
		head = head->next;
	}
	return head;
}

node removeFirst(node head) {
	head = head->next;
	free(head->prev);
	head->prev = NULL;
	return head;
}

node removeIndex(int index, node head) {

	if (index == 0) {
		return removeFirst(head);
	} else if ( index < 0) {
		return head;
	}
	current = getIndex(index, head);
	if (current == NULL) {
		return head;
	}
	current->prev->next = current->next;
	if (current->next != NULL) {
		current->next->prev = current->prev;
	}
	free(current);
	return head;
}

void print(){
	current=head;
	int x = 1;
	if(current!=NULL){
		while(current!=NULL){
			printf("No. %d | Nama Barang : %s | Qty Item  : %d  | Harga per Item : %d \n", x,  current->name, current->qty, current->price);
			current=current->next;
			
		    x++;
		}
	}else{
		printf("No Data\n");
	}
}

void main(){

    int choice;
    char name[30];
    int qty;
    int price;
    int number;

    do{
        printf("\n=== DATA BARANG TOKO PAK ANDI ===\n");
        printf("1. Input Data Barang\n");
        printf("2. Hapus Data Barang\n");
        printf("3. Lihat Data Barang\n");
        printf("4. Keluar\n");
    
        do{
            printf("Pilihan Anda  : ");
            scanf("%d", &choice);
            printf("\n==========================\n");
        } while(choice<1 || choice>4);
        
        switch(choice){
            case 1:
                printf("Nama Barang : ");
                scanf("%s", name);
                printf("Jumlah Barang : ");
                scanf("%d", &qty);
                printf("Harga Barang per Item : ");
                scanf("%d", &price);
                
                insert(name, qty, price);
                
                break;
                
            case 2:
                print();
                printf("\n=====================\n");
                printf("Nomor barang yang akan Dihapus : ");
                scanf("%d", &number);
                
                head = removeIndex(number-1, head);
                
                print();
                 
                break;
            
            case 3:
                print();
            
        }
    }while (choice != 4);

	getchar();
}
